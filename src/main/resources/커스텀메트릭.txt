# 비즈니스 문제에 대해서 모니터링 한다.

예를 들어 주문수 , 취소수 , 재고 수량 같은 메트릭 등이 있다. 이 부분은 공통으로 만들 수 있는 부분이 아니고
각각의 비즈니스에 특화된 부분들이다.
이런 메트릭은 시스템을 운영하는데 상당히 도움이 된다. 예를 들어서 취소수가 갑자기 급증하거나 재고 수량이 임개치 이상으로 쌓이는 부분들은
기술적인 매트릭으로 확인할수 없는 우리 시스템의 비즈니스 문제를 빠르게 파악하는데 도움을 준다.

빠르게 문제를 인지할수 있는 기반을 만들어 두는것.

오류 모니터링에서 문제가 없이 진행이 되었지만 계속해서 문제가 발생을 할때
어느 컴포넌트에서 문제가 발생했는지 빠르게 판단을 할수 있다.



# 마이크로미터

메트릭들에 대한 표준적인 방법을 제공한다. 마이크로미터가 중간에서 프로메테우스 포맷 , 엘라스틱 포맷 등 다양한 포맷으로 값을 출력해줄수 있다.
마이크로미터를 쓰려면 MeterRegistry 를 사용해야 한다.

- MeterRegistry
  마이크로미터 기능을 제공하는 핵심 컴포넌트
  자동으로 스프링 빈으로 등록되어 있다.


- Counter(카운터)
  * https://prometheus.io/docs/concepts/metric_types/#counter
  * 단조롭게 증가하는 단일 누적 측정항목
  * 단일 값
  * 보통 하나씩 증가
  * 누적이므로 전체 값을 포함(total)
  * 프로메테우스에서는 일반적으로 카운터의 이름 마지막에 _total 을 붙여서 my_order_total 과 같이 표현함
  * 값을 증가하거나 0으로 초기화 하는 것만 가능
  * 마이크로미터에서 값을 감소하는 기능도 지원하지만, 목적에 맞지 않음
  * 예) HTTP 요청수


- Gauge (게이지 메트릭)
    * https://prometheus.io/docs/concepts/metric_types/#gauge
    * 게이지는 임의로 오르내릴 수 있는 단일 숫자 값을 나타내는 메트릭
    * 값의 현재 상태를 보는데 사용
    * 값이 증가하거나 감소할 수 있음
    * 예) 차량의 속도, CPU 사용량, 메모리 사용량
    * 참고: 카운터와 게이지를 구분할 때는 값이 감소할 수 있는가를 고민해보면 도움이 된다.


